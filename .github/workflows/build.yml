name: Build/release

on: push

jobs:
  release:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        include:
          - os: osx
            osx_image: xcode10.2
            language: node_js
            node_js: "10"
            env:
              - ELECTRON_CACHE=$HOME/.cache/electron
              - ELECTRON_BUILDER_CACHE=$HOME/.cache/electron-builder

          - os: linux
            services: docker
            language: generic

      cache:
        directories:
          - node_modules
          - $HOME/.cache/electron
          - $HOME/.cache/electron-builder

      script:
        - |
          if [ "$TRAVIS_OS_NAME" == "linux" ]; then
            docker run --rm \
              --env-file <(env | grep -iE 'DEBUG|NODE_|ELECTRON_|YARN_|NPM_|CI|CIRCLE|TRAVIS|APPVEYOR_|CSC_|_TOKEN|_KEY|AWS_|STRIP|BUILD_') \
              -v ${PWD}:/project \
              -v ~/.cache/electron:/root/.cache/electron \
              -v ~/.cache/electron-builder:/root/.cache/electron-builder \
              electronuserland/builder:wine \
              /bin/bash -c "yarn --link-duplicates --pure-lockfile && yarn release --linux --win"
          else
            yarn release
          fi
      before_cache:
        - rm -rf $HOME/.cache/electron-builder/wine

      branches:
        except:
          - "/^v\\d+\\.\\d+\\.\\d+$/"

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v1

      - name: Install Node.js, NPM and Yarn
        uses: actions/setup-node@v1
        with:
          node-version: 14

      - name: Build/release Electron app
        uses: samuelmeuli/action-electron-builder@v1
        with:
          # GitHub token, automatically provided to the action
          # (No need to define this secret in the repo settings)
          github_token: ${{ secrets.github_token }}

          # If the commit is tagged with a version (e.g. "v1.0.0"),
          # release the app after building
          release: ${{ startsWith(github.ref, 'refs/tags/v') }}
